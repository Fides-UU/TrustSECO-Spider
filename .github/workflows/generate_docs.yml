name: Generate documentation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  release:
    types: [released]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set an environmental variable for the release tag
env:
  TAG: ${{ github.ref_name }}
  TAG_NAME: documentation-${{ github.ref_name }}

# Add the actual jobs
jobs:
  # Build the documentation and upload the static HTML files as an artifact
  create-documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3
      # Install dependencies
      - name: Install dependencies
        run: |
          pip install pdoc
          pip install markdown

      # Actually generate the documentation
      # Generate the readme.html file
      - name: Generate README file
        run: python -m markdown -x fenced_code -x codehilite README.md -f pdoc/readme.html

        # Generate the documentation
      - name: Generate documentation
        run: pdoc --logo "https://avatars.githubusercontent.com/u/100304333" --logo-link "https://github.com/Fides-UU" -t pdoc/ -o docs/ app.py controller.py demo.py src/utils src/stackoverflow src/libraries_io src/github src/cve src/clamav

      # Create a tar file containing the generated documentation
      - run: tar --directory docs/ -hcf artifact.tar .
      # Upload the newly created docs
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TAG_NAME }}
          path: ./artifact.tar
          retention-days: 1

  # Deploy the artifact to GitHub pages
  deploy-to-pages:
    # Make sure it runs after the documentation generation
    needs: create-documentation
    runs-on: ubuntu-latest
    # Allow the job to write to GitHub Pages
    permissions:
      pages: write
      id-token: write
    # Set the environment to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_dir: ${{ env.TAG_NAME }}
