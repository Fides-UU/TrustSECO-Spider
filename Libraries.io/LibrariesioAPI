import requests
import json

class LibrariesioAPICall:
    number_of_contributors = 0

    def __init__(self):
        self.api_key = input("Please enter your Libraries.io API key: ")
    
    # Project - Get information about a package and its versions
    # For example, platform: NPM, name: base62, api_key: API key of the user
    def get_package_and_version_information(self, platform, name, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '?api_key=' + str(api_key)).json()
        print(data_response)
    
    # Project Dependencies - Get a list of dependencies for a version of a project, pass latest to get dependency info for the latest available version
    # For example, platform: NPM, name: base62, version: 2.0.1 (or latest), api_key: API key of the user
    def get_dependencies_project(self, platform, name, version, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '/' + str(version) + '/dependencies?api_key=' + str(api_key)).json()
        print(data_response)
    
    # Project Dependents - Get packages that have at least one version that depends on a given project.
    # For example, platform: NPM, name: base62, api_key: API key of the user
    def get_project_dependents(self, platform, name, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '/dependents?api_key=' + str(api_key)).json()
        print(data_response)

    # Project Dependent Repositories - Get repositories that depend on a given project.
    # For example, platform: NPM, name: base62, api_key: API key of the user
    def get_project_dependent_repositories(self, platform, name, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '/dependent_repositories?api_key=' + str(api_key)).json()
        print(data_response)

    # Project Contributors - Get users that have contributed to a given project
    # For example, platform: NPM, name: base62, api_key: API key of the user
    def get_project_contributers(self, platform, name, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '/contributors?api_key=' + str(api_key)).json()
        print(data_response)

    # Project SourceRank - Get breakdown of SourceRank score for a given project
    # For example, platform: NPM, name: base62, api_key: API key of the user
    def get_project_sourcerank(self, platform, name, api_key):
        data_response = requests.get('https://libraries.io/api/' + str(platform) + '/' + str(name) + '/sourcerank?api_key=' + str(api_key)).json()
        print(data_response)

    # Repository - Get info for a repository. Currently only works for open source repositories.
    # For example, owner: gruntjs, name: grunt, api_key: API key of the user
    def get_repository_information(self, owner, name, api_key):
        data_response = requests.get('https://libraries.io/api/github/' + str(owner) + '/' + str(name) + '?api_key=' + str(api_key)).json()
        print(data_response)
        global number_of_contributors
        print(data_response['github_contributions_count'])
        number_of_contributors = int(data_response['github_contributions_count'])
